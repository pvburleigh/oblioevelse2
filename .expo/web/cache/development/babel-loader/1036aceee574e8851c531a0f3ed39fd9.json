{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/philipvanburleigh/Desktop/oblioevelse2/components/UniversityAddForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from \"firebase\";\nimport addUniversity from \"./dbFunctions/University\";\nexport default function UniversityAddForm(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var initialState = {\n    name: '',\n    location: ''\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      university = _useState2[0],\n      setUniversity = _useState2[1];\n\n  var changeTextInput = function changeTextInput(name, event) {\n    setUniversity(_objectSpread(_objectSpread({}, university), {}, _defineProperty({}, name, event)));\n  };\n\n  var handleSave = function handleSave() {\n    var validator;\n    return _regeneratorRuntime.async(function handleSave$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            validator = Object.entries(university).find(function (prop) {\n              return !prop[1].length;\n            });\n\n            if (!validator) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"Alle felter skal udfyldes!\"));\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(addUniversity(university));\n\n          case 6:\n            Alert.alert(\"Saved\");\n            setUniversity(university);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(\"Error: \" + _context.t0.message);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, Object.keys(initialState).map(function (key, index) {\n    return React.createElement(View, {\n      style: styles.row,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, key), React.createElement(TextInput, {\n      value: university[key],\n      onChangeText: function onChangeText(event) {\n        return changeTextInput(key, event);\n      },\n      style: styles.input,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }));\n  }), React.createElement(Button, {\n    title: \"Add University\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(handleSave());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    height: 30,\n    margin: 10\n  },\n  label: {\n    fontWeight: 'bold',\n    width: 100\n  },\n  input: {\n    borderWidth: 1,\n    padding: 5,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/philipvanburleigh/Desktop/oblioevelse2/components/UniversityAddForm.js"],"names":["StatusBar","React","useState","useEffect","firebase","addUniversity","UniversityAddForm","route","navigation","initialState","name","location","university","setUniversity","changeTextInput","event","handleSave","validator","Object","entries","find","prop","length","Alert","alert","console","log","message","styles","container","keys","map","key","index","row","label","input","StyleSheet","create","flexDirection","height","margin","fontWeight","width","borderWidth","padding","flex"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,iBAAT,OAA+C;AAAA;;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,UAAY,QAAZA,UAAY;AAC1D,MAAMC,YAAY,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAArB;;AACA,kBAAoCT,QAAQ,CAACO,YAAD,CAA5C;AAAA;AAAA,MAAOG,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,IAAD,EAAOK,KAAP,EAAgB;AACpCF,IAAAA,aAAa,iCAAKD,UAAL,2BAAkBF,IAAlB,EAAyBK,KAAzB,GAAb;AACH,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,SADW,GACCC,MAAM,CAACC,OAAP,CAAeP,UAAf,EAA2BQ,IAA3B,CAAgC,UAAAC,IAAI;AAAA,qBAAI,CAACA,IAAI,CAAC,CAAD,CAAJ,CAAQC,MAAb;AAAA,aAApC,CADD;;AAAA,iBAEXL,SAFW;AAAA;AAAA;AAAA;;AAAA,6CAGJM,KAAK,CAACC,KAAN,CAAY,4BAAZ,CAHI;;AAAA;AAAA;AAAA;AAAA,6CAMLnB,aAAa,CAACO,UAAD,CANR;;AAAA;AAOXW,YAAAA,KAAK,CAACC,KAAN;AACAX,YAAAA,aAAa,CAACD,UAAD,CAAb;AARW;AAAA;;AAAA;AAAA;AAAA;AAUXa,YAAAA,OAAO,CAACC,GAAR,aAAsB,YAAMC,OAA5B;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAcA,SACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEC,MAAM,CAACC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,MAAM,CAACY,IAAP,CAAYrB,YAAZ,EAA0BsB,GAA1B,CAA8B,UAACC,GAAD,EAAKC,KAAL,EAAc;AACzC,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,GAApB;AAAyB,MAAA,GAAG,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BH,GAA5B,CADJ,EAEI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEpB,UAAU,CAACoB,GAAD,CADrB;AAEI,MAAA,YAAY,EAAE,sBAACjB,KAAD;AAAA,eAAWD,eAAe,CAACkB,GAAD,EAAKjB,KAAL,CAA1B;AAAA,OAFlB;AAGI,MAAA,KAAK,EAAEa,MAAM,CAACQ,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH,GAXA,CADL,EAaI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,gBAAf;AAAiC,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAkBpB,UAAU,EAA5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAmBH;AAED,IAAMY,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,GAAG,EAAE;AACDK,IAAAA,aAAa,EAAE,KADd;AAEDC,IAAAA,MAAM,EAAE,EAFP;AAGDC,IAAAA,MAAM,EAAE;AAHP,GADwB;AAM7BN,EAAAA,KAAK,EAAE;AACHO,IAAAA,UAAU,EAAE,MADT;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GANsB;AAU7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,WAAW,EAAE,CADV;AAEHC,IAAAA,OAAO,EAAC,CAFL;AAGHC,IAAAA,IAAI,EAAE;AAHH;AAVsB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, {useState, useEffect} from \"react\";\nimport { StyleSheet, Text, TextInput, View, Button, SafeAreaView, ScrollView, Alert} from \"react-native\";\nimport firebase from \"firebase\";\nimport addUniversity from \"./dbFunctions/University\";\n\nexport default function UniversityAddForm({route, navigation}){\n    const initialState = { name: '', location: ''}\n    const [university, setUniversity] = useState(initialState)\n\n    const changeTextInput = (name, event) =>{\n        setUniversity({...university, [name]: event})\n    }\n\n    const handleSave = async ()=>{\n        let validator = Object.entries(university).find(prop => !prop[1].length)\n        if (validator){\n            return Alert.alert(\"Alle felter skal udfyldes!\");\n        }\n        try {\n            await addUniversity(university)\n            Alert.alert(`Saved`);\n            setUniversity(university)\n        } catch (error) {\n            console.log(`Error: ${error.message}`);\n        }\n    }\n\n    return (\n        <SafeAreaView styles={styles.container}>\n            <ScrollView>\n                {Object.keys(initialState).map((key,index) =>{\n                    return(\n                        <View style={styles.row} key={index}>\n                            <Text style={styles.label}>{key}</Text>\n                            <TextInput\n                                value={university[key]}\n                                onChangeText={(event) => changeTextInput(key,event)}\n                                style={styles.input}\n                            />\n                        </View>\n                    )\n                })}\n                <Button title={\"Add University\"} onPress={async ()=>{ await handleSave()}}/>\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        height: 30,\n        margin: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        width: 100\n    },\n    input: {\n        borderWidth: 1,\n        padding:5,\n        flex: 1\n    },\n});\n"]},"metadata":{},"sourceType":"module"}