{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/philipvanburleigh/Desktop/oblioevelse2/components/PostsAddForm.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from \"firebase\";\nimport addPost from \"./dbFunctions/Post\";\nexport default function postAddForm(_ref) {\n  var _this = this;\n\n  var educationId = _ref.educationId;\n  var initialState = {\n    title: '',\n    content: '',\n    educationId: educationId\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var changeTextInput = function changeTextInput(name, event) {\n    setPost(_objectSpread(_objectSpread({}, post), {}, _defineProperty({}, name, event)));\n  };\n\n  var handleSave = function handleSave() {\n    var validator, postLength;\n    return _regeneratorRuntime.async(function handleSave$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            validator = Object.entries(post).find(function (prop) {\n              return !prop[1].length;\n            });\n\n            if (!validator) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"Alle felter skal udfyldes!\"));\n\n          case 3:\n            postLength = 200;\n\n            if (!(post.content.length < postLength)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"En beretning skal minimum indeholde \" + postLength + \" tegn!\"));\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(addPost(post));\n\n          case 9:\n            Alert.alert(\"Saved\");\n            setPost(post);\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](6);\n            console.log(\"Error: \" + _context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[6, 13]], Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, Object.keys(initialState).map(function (key, index) {\n    if (key !== 'educationId') {\n      return React.createElement(View, {\n        style: styles.row,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, key), React.createElement(TextInput, {\n        value: post[key],\n        onChangeText: function onChangeText(event) {\n          return changeTextInput(key, event);\n        },\n        style: styles.input,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }));\n    }\n  }), React.createElement(Button, {\n    title: \"Save post\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(handleSave());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    height: 30,\n    margin: 10\n  },\n  label: {\n    fontWeight: 'bold',\n    width: 100\n  },\n  input: {\n    borderWidth: 1,\n    padding: 5,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/philipvanburleigh/Desktop/oblioevelse2/components/PostsAddForm.js"],"names":["StatusBar","React","useState","useEffect","firebase","addPost","postAddForm","educationId","initialState","title","content","post","setPost","changeTextInput","name","event","handleSave","validator","Object","entries","find","prop","length","Alert","alert","postLength","console","log","styles","container","keys","map","key","index","row","label","input","StyleSheet","create","flexDirection","height","margin","fontWeight","width","borderWidth","padding","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, {useState, useEffect} from \"react\";\nimport { StyleSheet, Text, TextInput, View, Button, SafeAreaView, ScrollView, Alert} from \"react-native\";\nimport firebase from \"firebase\";\nimport addPost from \"./dbFunctions/Post\";\n\nexport default function postAddForm({educationId}){\n    const initialState = { title: '', content:'', educationId: educationId}\n    const [post, setPost] = useState(initialState)\n    const changeTextInput = (name, event) =>{\n        setPost({...post, [name]: event})\n    }\n\n    const handleSave = async ()=>{\n        let validator = Object.entries(post).find(prop => !prop[1].length)\n        if (validator){\n            return Alert.alert(\"Alle felter skal udfyldes!\");\n        }\n\n        const postLength = 200\n\n        if(post.content.length < postLength){\n            return Alert.alert(`En beretning skal minimum indeholde ${postLength} tegn!`);\n        }\n        try {\n            await addPost(post)\n            Alert.alert(`Saved`);\n            setPost(post)\n        } catch (error) {\n            console.log(`Error: ${error}`);\n        }\n    }\n\n    return (\n        <SafeAreaView styles={styles.container}>\n            <ScrollView>\n                {Object.keys(initialState).map((key,index) =>{\n                    if (key !== 'educationId'){\n                        return(\n                            <View style={styles.row} key={index}>\n                                <Text style={styles.label}>{key}</Text>\n                                <TextInput\n                                    value={post[key]}\n                                    onChangeText={(event) => changeTextInput(key,event)}\n                                    style={styles.input}\n                                />\n                            </View>\n                        )\n                    }\n                })}\n                <Button title={\"Save post\"} onPress={async ()=>{await handleSave()}}/>\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        height: 30,\n        margin: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n        width: 100\n    },\n    input: {\n        borderWidth: 1,\n        padding:5,\n        flex: 1\n    },\n});\n"]},"metadata":{},"sourceType":"module"}